# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\scores.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3



class Ui_MW2(object):

    def check(self,teams, match) :
        t = self.cbTeam.currentText()
        m = self.cbMatch.currentText()
        if (t in teams) and (m in match) and (t != "Select Team") and (m != "Select Match"):
            self.getscores(t, "tbl"+m)

    def colorText(self, text) :
        return "<html><head/><body><p><span style='font-size:10pt; color:#00aaff;'>"+text+"</span></p></body></html>"
       
    def getscores(self,teamName,matchName) :
        
        Player = sqlite3.connect("cricket.db")
        myCursor = Player.cursor()
        sql_1 = """SELECT tblMatch_1.playerID, scored, faced, fours, sixes,
                     bowled, maiden, given, wkts, catches, stumping, runOut 
                     FROM '{}' JOIN tblTeams ON tblMatch_1.playerID=tblTeams.playerID
                     WHERE tblTeams.teamName='{}';""".format(matchName,teamName)

        myCursor.execute(sql_1)
        result = myCursor.fetchall()
        totalScore = 0
        team_scores = {}
        self.listPlayer.clear()
        self.listPoints.clear()
        for record in result:
            sql = "SELECT playerName FROM tblPlayers WHERE ID={}".format(record[0])
            myCursor.execute(sql)
            res = myCursor.fetchone()
          
            pp = 0
            pp += record[1]//2
            pp += (record[1]//50)*5
            pp += (record[1]//100)*10
            if record[2] != 0 :
                sr = record[1]/record[2]
                if 80<=sr<=100 :
                    pp += 2
                elif 100<sr :
                    pp += 4
            pp += record[3]*1
            pp += record[4]*2
            overs = record[5]//6
            if overs !=0 :
                er = record[7]/overs
                if 3.5<=er<4.5 :
                    pp +=4
                elif 2<=er<3.5 :
                    pp +=7
                elif er<2 :
                    pp +=10
            pp += record[8]*10
            if record[8]>=5 :
                pp += 10
            elif record[8]>=3 :
                pp += 5
            field = record[9]+record[10]+record[11]
            pp += field*10
            team_scores[res[0]] = str(pp)
            totalScore += pp
        Player.close()

        team_Players = []
        for item in team_scores.keys() :
            team_Players.append(item)
        team_Players.sort()
        for item in team_Players :
            self.listPlayer.addItem(item)
            self.listPoints.addItem(team_scores[item])
        self.Points.setText(self.colorText(str(int(totalScore))))



    def setupUi(self, MW2, teams, match):
        MW2.setObjectName("MW2")
        MW2.resize(484, 388)
        self.centralwidget = QtWidgets.QWidget(MW2)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(50, 10, 381, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.cbTeam = QtWidgets.QComboBox(self.centralwidget)
        self.cbTeam.setGeometry(QtCore.QRect(100, 40, 121, 22))
        self.cbTeam.setEditable(True)
        self.cbTeam.setMaxVisibleItems(5)
        self.cbTeam.setObjectName("cbTeam")
        self.cbMatch = QtWidgets.QComboBox(self.centralwidget)
        self.cbMatch.setGeometry(QtCore.QRect(250, 40, 121, 22))
        self.cbMatch.setEditable(True)
        self.cbMatch.setMaxVisibleItems(5)
        self.cbMatch.setObjectName("cbMatch")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(40, 70, 391, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(50, 100, 71, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(250, 100, 71, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.Points = QtWidgets.QLabel(self.centralwidget)
        self.Points.setGeometry(QtCore.QRect(300, 100, 47, 13))
        self.Points.setObjectName("Points")
        self.listPlayer = QtWidgets.QListWidget(self.centralwidget)
        self.listPlayer.setGeometry(QtCore.QRect(50, 120, 171, 192))
        self.listPlayer.setObjectName("listPlayer")
        self.listPoints = QtWidgets.QListWidget(self.centralwidget)
        self.listPoints.setGeometry(QtCore.QRect(250, 120, 171, 192))
        self.listPoints.setObjectName("listPoints")
        self.pbScore = QtWidgets.QPushButton(self.centralwidget)
        self.pbScore.setGeometry(QtCore.QRect(180, 320, 111, 23))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.pbScore.setFont(font)
        self.pbScore.setObjectName("pbScore")
        MW2.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MW2)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 484, 21))
        self.menubar.setObjectName("menubar")
        MW2.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MW2)
        self.statusbar.setObjectName("statusbar")
        MW2.setStatusBar(self.statusbar)

        for item in teams:
            self.cbTeam.addItem(item)
        for item in match :
            self.cbMatch.addItem(item)

        self.pbScore.clicked.connect(lambda : self.check(teams, match))


        self.retranslateUi(MW2)
        QtCore.QMetaObject.connectSlotsByName(MW2)

    def retranslateUi(self, MW2):
        _translate = QtCore.QCoreApplication.translate
        MW2.setWindowTitle(_translate("MW2", "Evaluate Scores"))
        self.label.setText(_translate("MW2", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600; font-style:italic;\">Evaluate the Performance of your Fantasy Team</span></p></body></html>"))
        self.cbTeam.setCurrentText(_translate("MW2", "Select Team"))
        self.cbMatch.setCurrentText(_translate("MW2", "Select Match"))
        self.label_2.setText(_translate("MW2", "Players"))
        self.label_3.setText(_translate("MW2", "Points"))
        self.Points.setText(_translate("MW2", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600; color:#55aaff;\"># # #</span></p></body></html>"))
        self.pbScore.setText(_translate("MW2", "Evaluate Score"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MW2 = QtWidgets.QMainWindow()
    ui = Ui_MW2()
    ui.setupUi(MW2)
    MW2.show()
    sys.exit(app.exec_())
